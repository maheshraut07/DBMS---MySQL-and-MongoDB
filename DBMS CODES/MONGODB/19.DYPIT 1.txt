// Step 1: Connect to MongoDB and create database DYPIT
use DYPIT

// Step 2: Create Teachers collection
db.createCollection("Teachers")

// Step 3: Create Students collection
db.createCollection("Students")

// Insert data into Teachers collection
db.Teachers.insert({
    Tname: "John Doe",
    dno: "D001",
    dname: "Computer",
    experience: 5,
    salary: 12000,
    date_of_joining: new Date("2022-01-01")
})

// Insert data into Students collection
db.Students.insert({
    Sname: "Alice",
    roll_no: 2,
    class: "xyz"
})

// ... insert more data as needed



1.Find the information about all teachers:

db.Teachers.find()

2.Find the information about all teachers of the computer department:

db.Teachers.find({ dname: "Computer" })

3.Find the information about all teachers of computer, IT, and E&TC department:

db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] } })

4.Find the information about all teachers of computer, IT, and E&TC department having salary greater than or equal to 10000/-:

db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] }, salary: { $gte: 10000 } })

5.Find the student information having roll_no = 2 or Sname=xyz:

db.Students.find({ $or: [{ roll_no: 2 }, { Sname: "xyz" }] })

6.Update the experience of teacher-praveen to 10 years, if the entry is not available in the database, consider the entry as a new entry:

db.Teachers.update({ Tname: "praveen" }, { $set: { experience: 10 } }, { upsert: true })


7.Update the department of all the teachers working in the IT department to COMP


db.Teachers.update({ dname: "IT" }, { $set: { dname: "COMP" } }, { multi: true })

8.Find the teachers' name and their experience from the Teachers collection:

db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 })

9.Using save() method, insert one entry in the department collection:

db.Department.save({ dept_name: "SomeDept" })

10.Using save() method, change the department of teacher Rajesh to IT:

db.Teachers.update({ Tname: "Rajesh" }, { $set: { dname: "IT" } })

11.Delete all the documents from the Teachers collection having IT dept.:

db.Teachers.deleteMany({ dname: "IT" })

12.Display the first 3 documents in the Teachers collection in ascending order using pretty() method:

db.Teachers.find().sort({ _id: 1 }).limit(3).pretty()














