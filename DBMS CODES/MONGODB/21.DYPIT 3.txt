// Step 1: Connect to MongoDB and create database DYPIT
use DYPIT

// Step 2: Create Teachers collection
db.createCollection("Teachers")

// Step 3: Create Students collection
db.createCollection("Students")

// Insert data into Teachers collection
db.Teachers.insert({
    Tname: "John Doe",
    dno: "D001",
    dname: "Computer",
    experience: 5,
    salary: 12000,
    date_of_joining: new Date("2022-01-01")
})

// Insert data into Students collection
db.Students.insert({
    Sname: "Alice",
    roll_no: 1,
    class: "X"
})


1.Find the information about all teachers:
db.Teachers.find()

2.Find the average salary of teachers in the computer department:
db.Teachers.aggregate([
    { $match: { dname: "Computer" } },
    { $group: { _id: null, avgSalary: { $avg: "$salary" } } }
])

3.Find the minimum and maximum salary of E&TC department teachers:
db.Teachers.aggregate([
    { $match: { dname: "E&TC" } },
    { $group: { _id: null, minSalary: { $min: "$salary" }, maxSalary: { $max: "$salary" } } }
])


4.Find the information about all teachers of Computer, IT, and E&TC department having salary greater than or equal to 10000/-:

db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] }, salary: { $gte: 10000 } })


5.Find the student information having roll_no = 2 or Sname=xyz:
db.Students.find({ $or: [{ roll_no: 2 }, { Sname: "xyz" }] })

6.Update the experience of teacher-praveen to 10 years, considering it as a new entry if not available in the database:
db.Teachers.update({ Tname: "praveen" }, { $set: { experience: 10 } }, { upsert: true })


7.Update the department of all the teachers working in IT department to COMP:
db.Teachers.update({ dname: "IT" }, { $set: { dname: "COMP" } }, { multi: true })


8.Find the teachers' name and their experience from the Teachers collection:
db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 })


9.Using save() method, insert one entry in the department collection:
db.Department.save({ dept_name: "SomeDept" })


10.Find the total salary of all teachers:
db.Teachers.aggregate([
    { $group: { _id: null, totalSalary: { $sum: "$salary" } } }
])








