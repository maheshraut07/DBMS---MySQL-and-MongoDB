6. The following tables form part of a database held in a relational DBMS:
Hotel (HotelNo, Name, City)
Room (RoomNo, HotelNo, Type, Price)
Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
Guest (GuestNo, GuestName, GuestAddress)
Solve following queries by SQL

-- Create database
-- Create the database
CREATE DATABASE HotelDB;

-- Use the database
USE HotelDB;

-- Create the 'Hotel' table
CREATE TABLE Hotel (
  HotelNo INT PRIMARY KEY,
  Name VARCHAR(255),
  City VARCHAR(255)
);

-- Insert data into the 'Hotel' table
INSERT INTO Hotel (HotelNo, Name, City)
VALUES
  (1, 'Grosvenor Hotel', 'London'),
  (2, 'Hilton Hotel', 'New York'),
  (3, 'Marriott Hotel', 'Los Angeles');

-- Create the 'Room' table
CREATE TABLE Room (
  RoomNo INT,
  HotelNo INT,
  Type VARCHAR(255),
  Price DECIMAL(10, 2),
  PRIMARY KEY (HotelNo, RoomNo)
);

-- Insert data into the 'Room' table
INSERT INTO Room (RoomNo, HotelNo, Type, Price)
VALUES
  (101, 1, 'Single', 100.00),
  (102, 1, 'Double', 150.00),
  (201, 2, 'Single', 120.00),
  (202, 2, 'Double', 180.00),
  (301, 3, 'Single', 110.00),
  (302, 3, 'Double', 160.00);

-- Create the 'Booking' table
CREATE TABLE Booking (
  HotelNo INT,
  GuestNo INT,
  DateFrom DATE,
  DateTo DATE,
  RoomNo INT,
  PRIMARY KEY (HotelNo, GuestNo, DateFrom),
  FOREIGN KEY (HotelNo, RoomNo) REFERENCES Room(HotelNo, RoomNo)
);

-- Insert data into the 'Booking' table
INSERT INTO Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
VALUES
  (1, 1, '2023-01-01', '2023-01-05', 101),
  (1, 2, '2023-02-10', '2023-02-15', 102),
  (2, 3, '2023-03-20', '2023-03-25', 201),
  (2, 4, '2023-04-05', '2023-04-10', 202),
  (3, 5, '2023-05-15', '2023-05-20', 301),
  (3, 6, '2023-04-30', '2023-05-05', 302);

-- Create the 'Guest' table
CREATE TABLE Guest (
  GuestNo INT PRIMARY KEY,
  GuestName VARCHAR(255),
  GuestAddress VARCHAR(255)
);

-- Insert data into the 'Guest' table
INSERT INTO Guest (GuestNo, GuestName, GuestAddress)
VALUES
  (1, 'John Smith', '123 Main St, London'),
  (2, 'Alice Johnson', '456 Elm St, London'),
  (3, 'Bob Wilson', '789 Oak St, New York'),
  (4, 'Charlie Brown', '101 Pine St, New York'),
  (5, 'David Lee', '222 Park Ave, Los Angeles'),
  (6, 'Eve Davis', '333 Sunset Blvd, Los Angeles');




1. List full details of all hotels.
SELECT * FROM Hotel;

2. List full details of all hotels in London.
SELECT * FROM Hotel
WHERE City = 'London';

3. List all guests currently staying at the Grosvenor Hotel.
SELECT Guest.GuestName
FROM Guest
INNER JOIN Booking ON Guest.GuestNo = Booking.GuestNo
INNER JOIN Room ON Booking.HotelNo = Room.HotelNo AND Booking.RoomNo = Room.RoomNo
INNER JOIN Hotel ON Room.HotelNo = Hotel.HotelNo
WHERE Hotel.Name = 'Grosvenor Hotel'; -- Grosvenor Hotel

4. List the names and addresses of all guests in London, alphabetically ordered by name.
SELECT GuestName, GuestAddress
FROM Guest
WHERE GuestAddress LIKE '%London%'
ORDER BY GuestName;


5. List the bookings for which no date_to has been specified.
SELECT * FROM Booking
WHERE DateTo IS NULL;

6. How many hotels are there?
SELECT COUNT(*) AS NumHotels FROM Hotel;

7. List the rooms that are currently unoccupied at the Grosvenor Hotel.
SELECT RoomNo
FROM Room
WHERE HotelNo = 1
AND RoomNo NOT IN (SELECT RoomNo FROM Booking WHERE HotelNo = 1 AND CURDATE() BETWEEN DateFrom AND DateTo);

8. What is the lost income from unoccupied rooms at each hotel today?
SELECT Hotel.Name, SUM(Room.Price) AS lost_income
FROM Hotel
LEFT JOIN Room ON Hotel.HotelNo = Room.HotelNo
WHERE CURDATE() NOT IN (SELECT DateFrom FROM Booking WHERE HotelNo = Hotel.HotelNo)
GROUP BY Hotel.HotelNo, Hotel.Name;

9. Create index on one of the field and show is performance in query.
-- Create an index on the 'Price' field in the 'Room' table
CREATE INDEX idx_Price ON Room(Price);

-- Use the index in a query to find all rooms with a price less than 150.00
EXPLAIN SELECT * FROM Room WHERE Price < 150.00;


10. Create one view on above database and query it.

CREATE VIEW HotelGuests AS
SELECT Hotel.Name AS HotelName, Guest.GuestName AS GuestName
FROM Guest
INNER JOIN Booking ON Guest.GuestNo = Booking.GuestNo
INNER JOIN Room ON Booking.HotelNo = Room.HotelNo AND Booking.RoomNo = Room.RoomNo
INNER JOIN Hotel ON Room.HotelNo = Hotel.HotelNo;

-- Query the view to list the guests at the Grosvenor Hotel
SELECT GuestName
FROM HotelGuests
WHERE HotelName = 'Grosvenor Hotel';
