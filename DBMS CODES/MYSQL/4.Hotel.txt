4. The following tables form part of a database held in a relational DBMS:
Hotel (HotelNo, Name, City) HotelNo is primary key
Room (RoomNo, HotelNo, Type, Price)
Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
Guest (GuestNo, GuestName, GuestAddress) GuestNo is primary key
Solve following queries by SQL

-- Create the database
CREATE DATABASE HotelDB;

-- Use the database
USE HotelDB;

-- Create the 'Hotel' table
CREATE TABLE Hotel (
  HotelNo INT PRIMARY KEY,
  Name VARCHAR(255),
  City VARCHAR(255)
);

-- Insert data into the 'Hotel' table
INSERT INTO Hotel (HotelNo, Name, City)
VALUES
  (1, 'Grosvenor Hotel', 'London'),
  (2, 'Hilton Hotel', 'New York'),
  (3, 'Marriott Hotel', 'Los Angeles');

-- Create the 'Room' table
CREATE TABLE Room (
  RoomNo INT,
  HotelNo INT,
  Type VARCHAR(255),
  Price DECIMAL(10, 2),
  PRIMARY KEY (HotelNo, RoomNo)
);

-- Insert data into the 'Room' table
INSERT INTO Room (RoomNo, HotelNo, Type, Price)
VALUES
  (101, 1, 'Single', 100.00),
  (102, 1, 'Double', 150.00),
  (201, 2, 'Single', 120.00),
  (202, 2, 'Double', 180.00),
  (301, 3, 'Single', 110.00),
  (302, 3, 'Double', 160.00);

-- Create the 'Booking' table
CREATE TABLE Booking (
  HotelNo INT,
  GuestNo INT,
  DateFrom DATE,
  DateTo DATE,
  RoomNo INT,
  PRIMARY KEY (HotelNo, GuestNo, DateFrom),
  FOREIGN KEY (HotelNo, RoomNo) REFERENCES Room(HotelNo, RoomNo)
);

-- Insert data into the 'Booking' table
INSERT INTO Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
VALUES
  (1, 1, '2023-01-01', '2023-01-05', 101),
  (1, 2, '2023-02-10', '2023-02-15', 102),
  (2, 3, '2023-03-20', '2023-03-25', 201),
  (2, 4, '2023-04-05', '2023-04-10', 202),
  (3, 5, '2023-05-15', '2023-05-20', 301),
  (3, 6, '2023-04-30', '2023-05-05', 302);

-- Create the 'Guest' table
CREATE TABLE Guest (
  GuestNo INT PRIMARY KEY,
  GuestName VARCHAR(255),
  GuestAddress VARCHAR(255)
);

-- Insert data into the 'Guest' table
INSERT INTO Guest (GuestNo, GuestName, GuestAddress)
VALUES
  (1, 'John Smith', '123 Main St, London'),
  (2, 'Alice Johnson', '456 Elm St, London'),
  (3, 'Bob Wilson', '789 Oak St, New York'),
  (4, 'Charlie Brown', '101 Pine St, New York'),
  (5, 'David Lee', '222 Park Ave, Los Angeles'),
  (6, 'Eve Davis', '333 Sunset Blvd, Los Angeles');





1. What is the total revenue per night from all double rooms?

SELECT SUM(Price) AS TotalRevenue
FROM Room
WHERE Type = 'Double';

2. List the details of all rooms at the Grosvenor Hotel, including the name of
the guest staying in the room, if the room is occupied.
SELECT Room.RoomNo, Room.Type, Room.Price, Guest.GuestName
FROM Room
LEFT JOIN Booking ON Room.HotelNo = Booking.HotelNo AND Room.RoomNo = Booking.RoomNo
LEFT JOIN Guest ON Booking.GuestNo = Guest.GuestNo
WHERE Room.HotelNo = 1;



3. What is the average number of bookings for each hotel in April?
SELECT Hotel.Name, AVG(booking_count) AS avg_bookings_in_april
FROM Hotel
LEFT JOIN (
  SELECT Room.HotelNo, COUNT(Booking.RoomNo) AS booking_count
  FROM Booking
  INNER JOIN Room ON Booking.HotelNo = Room.HotelNo AND Booking.RoomNo = Room.RoomNo
  WHERE MONTH(DateFrom) = 4
  GROUP BY Room.HotelNo
) AS HotelBookingCounts ON Hotel.HotelNo = HotelBookingCounts.HotelNo
GROUP BY Hotel.HotelNo, Hotel.Name;

4. Create index on one of the field and show is performance in query.
CREATE INDEX idx_booking_roomno ON Booking (RoomNo);
SELECT Booking.RoomNo, Booking.DateFrom, Booking.DateTo, Booking.GuestNo
FROM Booking
WHERE RoomNo = 101;


5. List full details of all hotels.
SELECT *
FROM Hotel;

6. List full details of all hotels in London.
SELECT *
FROM Hotel
WHERE City = 'London';


7. Update the price of all rooms by 5%.
UPDATE Room
SET Price = Price * 1.05;


8. List the number of rooms in each hotel in London.
SELECT Hotel.HotelNo, COUNT(*) AS NumRooms
FROM Hotel
JOIN Room ON Hotel.HotelNo = Room.HotelNo
WHERE Hotel.City = 'London'
GROUP BY Hotel.HotelNo;


9. List all double or family rooms with a price below Â£40.00 per night, in
ascending order of price.
SELECT RoomNo, Type, Price
FROM Room
WHERE Type IN ('Double', 'Family')
AND Price < 40.00
ORDER BY Price ASC;


